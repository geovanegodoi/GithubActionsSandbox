name: Workflow CI-CD

on:
  push:
    branches: [ develop, main, feature/*, hotfix/* ]
  pull_request:
    branches: [ develop, main ]

  workflow_dispatch:

jobs:
  APP1-BUILD:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build
        run: echo Build APP1

  APP2-BUILD:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build
        run: echo Build APP2
        
  APP3-BUILD:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build
        run: echo Build APP3
        
  GENERATE-VERSION:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.version.outputs.version_tag }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Check Version
        id: version
        uses: paulhatch/semantic-version@v4.0.2
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          major_pattern: "{MAJOR}"
          minor_pattern: "{MINOR}"
          format: "${major}.${minor}.${patch}"
          short_tags: false
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false

  CHECK-VERSION:
    name: ${{ needs.GENERATE-VERSION.outputs.output1 }}
    runs-on: ubuntu-latest
    needs: [APP1-BUILD, APP2-BUILD, APP3-BUILD, GENERATE-VERSION]
      
    steps:
      - name : Version ${{ needs.GENERATE-VERSION.outputs.output1 }}
        run: echo ${{ needs.GENERATE-VERSION.outputs.output1 }}
        
  DOCKER-APPROVAL:
    runs-on: ubuntu-latest
    needs: [CHECK-VERSION]
    
    if: github.ref == 'refs/heads/main'
    
    environment: 
      name: DockerHub
      url: https://hub.docker.com
          
    steps:
      - name: Request Approval
        run: echo Request Approval

  APP1-DOCKER:
    runs-on: ubuntu-latest
    needs: [DOCKER-APPROVAL]
    
    steps:
      - name: Deploy Docker
        run: echo Deploy APP1 Docker
        
  APP2-DOCKER:
    runs-on: ubuntu-latest
    needs: [DOCKER-APPROVAL]
              
    steps:
      - name: Deploy Docker
        run: echo Deploy APP2 Docker
        
  APP3-DOCKER:
    runs-on: ubuntu-latest
    needs: [DOCKER-APPROVAL]
    
    steps:
      - name: Deploy Docker
        run: echo Deploy APP3 Docker

  PROD-APPROVAL:
    runs-on: ubuntu-latest
    needs: [APP1-DOCKER, APP2-DOCKER, APP3-DOCKER]
    
    if: github.ref == 'refs/heads/main'
    
    environment: 
      name: Production
      url: https://prod.services.com
          
    steps:
      - name: Request Approval
        run: echo Request Approval

  APP1-PROD:
    runs-on: ubuntu-latest
    needs: [PROD-APPROVAL]
    
    environment: 
      name: Default
      url: http://localhost:5000/swagger
    
    steps:
      - name: Deploy Production
        run: echo Deploy APP1 Production
        
  APP2-PROD:
    runs-on: ubuntu-latest
    needs: [PROD-APPROVAL]

    environment: 
      name: Default
      url: http://localhost:5001/swagger
      
    steps:
      - name: Deploy Production
        run: echo Deploy APP2 Production
        
  APP3-PROD:
    runs-on: ubuntu-latest
    needs: [PROD-APPROVAL]
    
    environment: 
      name: Default
      url: http://localhost:5002/swagger
    
    steps:
      - name: Deploy Production
        run: echo Deploy APP3 Production
